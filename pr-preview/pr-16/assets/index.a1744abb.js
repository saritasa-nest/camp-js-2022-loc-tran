import{ae as u,X as o,r,ab as A,z as M,C as m,af as f,j as i,ag as I,ah as h,ai as l}from"./index.74913b6a.js";import{u as P}from"./useAppNavigate.31434aeb.js";import{M as S}from"./ManagementForm.38225bb9.js";import"./selectors.241c8577.js";import"./object.dc068797.js";import"./TextField.5e1a43e6.js";import"./selectors.b303cf30.js";import"./Button.b98c84da.js";const{selectById:b}=u.getSelectors(),E=o((e,t)=>b(e.animeManagement,t),e=>e),N=o(e=>e.animeManagement.isLoading,e=>e),v=()=>{const e=A(),t=M(),c=m(N),{navigateWithSearchParams:p}=P(),n=e.animeId;if(n===void 0||isNaN(Number.parseInt(n,10)))throw new Error("Invalid anime id!");const a=Number.parseInt(n,10),g=m(s=>E(s,a));r.exports.useEffect(()=>{t(f(a))},[a]);const d=s=>{t(h(new l({id:a,...s}))).then(()=>p(`/anime/${a}`))};return c?i(I,{}):i(S,{managementData:g,onSubmit:d})},z=r.exports.memo(v);export{z as AnimeEditPage};
